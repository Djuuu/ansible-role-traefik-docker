---

## Check

- name: Check directories
  ansible.builtin.stat: { path: "{{ item }}" }
  register: _dir
  failed_when: not _dir.stat.exists or not _dir.stat.writeable or not (_dir.stat.isdir or _dir.stat.islnk)
  loop:
    - "{{ docker_projects_path }}"
  tags: ["init"]

## Init

- name: Init docker compose project vars
  ansible.builtin.include_role: { name: djuuu.docker_tasks, tasks_from: init-compose-project-vars }

- name: Ensure project directory exists
  ansible.builtin.file:
    path: "{{ project_path }}"
    state: directory
    mode: '0755'
  tags: ["init"]

- name: Ensure logs directory exists
  ansible.builtin.file:
    path: "{{ traefik_logs_path }}"
    state: directory
    mode: '0775'
  tags: ["init"]

## Configure

- name: Copy configuration files
  ansible.builtin.copy:
    src: "./"
    dest: "{{ project_path }}/"
    directory_mode : '0755'
    mode:            '0644'
  notify: Restart traefik

- name: Check for host-specific configuration files
  delegate_to: localhost
  ansible.builtin.stat:
    path: "config/traefik/{{ inventory_hostname }}"
  register: host_config_dir

- name: Copy host-specific configuration files
  ansible.builtin.copy:
    src: "config/traefik/{{ inventory_hostname }}/"
    dest: "{{ project_path }}/"
    directory_mode : '0755'
    mode:            '0644'
  when:
    - host_config_dir.stat.exists
    - host_config_dir.stat.isdir
  notify: Restart traefik

- name: Template users.htpasswd
  ansible.builtin.template:
    src: users.htpasswd.j2
    dest: "{{ project_path }}/users.htpasswd"
    mode: '0644'
  notify: Restart traefik

- name: Template dynamic conf
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ project_path }}/{{ item }}"
    mode: '0644'
  loop:
    - dynamic-conf/default-cert.yml
    - dynamic-conf/middlewares/allow-frames.yml
    - dynamic-conf/middlewares/internal-access.yml
  notify: Restart traefik

- name: Template docker-compose.yml
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ project_path }}/docker-compose.yml"
    mode: '0644'
    validate: "{{ docker_cli }} compose -f %s config"
    backup: true

## Run

- name: Start app
  ansible.builtin.include_role: { name: djuuu.docker_tasks, tasks_from: compose-up }
